@model InterfazPrueba.Models.EstudiantesPagosVM
@using PagedList.Mvc;

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

@using (Html.BeginForm("Index", "Pagos", FormMethod.Get, new { @class = "form-inline" }))
{
    <div class="form-group mb-2">
        <label for="estadoPago" class="sr-only">Estado de Pago</label>
        @Html.DropDownListFor(
            model => model.EstadoPagoSeleccionado,
            new SelectList(new List<SelectListItem>
            {
                new SelectListItem { Text = "Completo", Value = "Completo" },
                new SelectListItem { Text = "Parcial", Value = "Parcial" },
                new SelectListItem { Text = "Pendiente", Value = "Pendiente" }
            }, "Value", "Text"),
            "Selecciona un estado",
            new { @class = "form-control", @id = "estadoPago" }
        )
    </div>

    <p>
        Fecha de Pago: @Html.TextBoxFor(model => model.FechaPagoSeleccionado, "{0:yyyy-MM-dd}", new { @type = "date" })
    </p>
    <button type="submit" class="btn btn-primary mb-2">Buscar</button>
}


<link href="~/Sources/paginacion.css" rel="stylesheet" />

<!-- Añadir controles de paginación aquí -->
@Html.PagedListPager(Model.Pagos, page => Url.Action("Index", new { page }), new PagedListRenderOptions
{
    DisplayLinkToFirstPage = PagedListDisplayMode.Always,
    DisplayLinkToLastPage = PagedListDisplayMode.Always,
    DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
    DisplayLinkToNextPage = PagedListDisplayMode.Always,
    DisplayLinkToIndividualPages = true,
    DisplayPageCountAndCurrentLocation = false,
    MaximumPageNumbersToDisplay = 5,
    DisplayEllipsesWhenNotShowingAllPageNumbers = true,
    EllipsesFormat = "&#8230;",
    LinkToFirstPageFormat = "Primera",
    LinkToPreviousPageFormat = "Anterior",
    LinkToNextPageFormat = "Siguiente",
    LinkToLastPageFormat = "Última",
    PageCountAndCurrentLocationFormat = "Página {0} de {1}.",
    ItemSliceAndTotalFormat = "Mostrando {0} a {1} de {2} entradas.",
    FunctionToDisplayEachPageNumber = null,
    ClassToApplyToFirstListItemInPager = null,
    ClassToApplyToLastListItemInPager = null,
    ContainerDivClasses = new[] { "pagination-container" },
    UlElementClasses = new[] { "pagination" },
    LiElementClasses = new[] { "page-item" },
})



<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Pagos.FirstOrDefault().Estudiantes.nombre)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Pagos.FirstOrDefault().fecha_pago)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Pagos.FirstOrDefault().monto)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Pagos.FirstOrDefault().semestre)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Pagos.FirstOrDefault().estado)
        </th>
        <th>Opciones</th>
    </tr>

    @foreach (var item in Model.Pagos)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Estudiantes.nombre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.fecha_pago)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.monto)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.semestre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.estado)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.id_pago }) |
                @Html.ActionLink("Details", "Details", new { id = item.id_pago }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.id_pago })
            </td>
        </tr>
    }
</table>
